(self.webpackChunkshake_lang_github_io=self.webpackChunkshake_lang_github_io||[]).push([[446],{446:function(a){"use strict";a.exports=JSON.parse('{"pages":["build/www/docs/operators.html","build/www/index.html","build/www/test.html"],"ids":["shake-programming-language-features","1-operators","1-0-mathematical-operators","site-contents","1-1-comparison-operators","1-2-logical-operators","1-3-brackets-priorities","1-3-0-brackets","1-3-1-priorities",null,"try-shake","headline-1","headline-2","headline-3","headline-4","headline-5","headline-6"],"contents":[{"page":1,"findAt":1,"contents":"Shake Programming Language Features<a class=\\"headline-link\\" href=\\"#shake-programming-language-features\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":2,"contents":"1 Operators<a class=\\"headline-link\\" href=\\"#1-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":3,"contents":"1.0 Mathematical Operators<a class=\\"headline-link\\" href=\\"#1-0-mathematical-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":4,"contents":"Shake has 6 different types of simple mathematical operators"},{"page":0,"findAt":3,"contents":"<span class=\\"hljs-number\\">10</span> + <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// plus</span>\\n<span class=\\"hljs-number\\">10</span> – <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// minus</span>\\n<span class=\\"hljs-number\\">10</span> * <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// multiply</span>\\n<span class=\\"hljs-number\\">10</span> / <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// divide</span>\\n<span class=\\"hljs-number\\">10</span> <span class=\\"hljs-preprocessor\\">%</span> <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// modulo</span>\\n<span class=\\"hljs-number\\">10</span> ** <span class=\\"hljs-number\\">3</span>  <span class=\\"hljs-comment\\">// power (&gt;&gt; 10 * 10 * 10)</span>\\n"},{"page":0,"findAt":5,"contents":"1.1 Comparison Operators<a class=\\"headline-link\\" href=\\"#1-1-comparison-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":3,"contents":"These are Shake\'s comparison-operators"},{"page":0,"findAt":3,"contents":"<span class=\\"hljs-number\\">9</span> == <span class=\\"hljs-number\\">8</span>  <span class=\\"hljs-comment\\">// equals</span>\\n<span class=\\"hljs-number\\">9</span> &gt;= <span class=\\"hljs-number\\">8</span>  <span class=\\"hljs-comment\\">// bigger Equals</span>\\n<span class=\\"hljs-number\\">9</span> &lt;= <span class=\\"hljs-number\\">8</span>  <span class=\\"hljs-comment\\">// lower Equals</span>\\n<span class=\\"hljs-number\\">9</span> &gt; <span class=\\"hljs-number\\">8</span>   <span class=\\"hljs-comment\\">// bigger</span>\\n<span class=\\"hljs-number\\">9</span> &lt; <span class=\\"hljs-number\\">8</span>   <span class=\\"hljs-comment\\">// lower</span>\\n"},{"page":0,"findAt":6,"contents":"1.2 Logical Operators<a class=\\"headline-link\\" href=\\"#1-2-logical-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":3,"contents":"<span class=\\"hljs-literal\\">true</span> || <span class=\\"hljs-literal\\">false</span>  <span class=\\"hljs-regexp\\">//</span> <span class=\\"hljs-keyword\\">or</span> (at least one <span class=\\"hljs-keyword\\">of</span> them has to be correct) \\n<span class=\\"hljs-literal\\">true</span> &amp;&amp; <span class=\\"hljs-literal\\">false</span>  <span class=\\"hljs-regexp\\">//</span> <span class=\\"hljs-keyword\\">and</span> (both <span class=\\"hljs-keyword\\">of</span> them have to be correct)\\n"},{"page":0,"findAt":7,"contents":"1.3 Brackets &amp; Priorities<a class=\\"headline-link\\" href=\\"#1-3-brackets-priorities\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":8,"contents":"1.3.0 Brackets<a class=\\"headline-link\\" href=\\"#1-3-0-brackets\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":3,"contents":"If you are working with bigger terms, there are priorities, e.g.\\nmultiplication and divisions are preferred before plus and minus."},{"page":0,"findAt":3,"contents":"If you want to prefer plus over multiply you can use brackets around\\nthe addition to give it a higher priority"},{"page":0,"findAt":3,"contents":"eg."},{"page":0,"findAt":3,"contents":"<span class=\\"hljs-number\\">4</span> * <span class=\\"hljs-number\\">10</span> + <span class=\\"hljs-number\\">3</span>    <span class=\\"hljs-comment\\">// &gt;&gt; 43</span>\\n<span class=\\"hljs-number\\">4</span> * <span class=\\"hljs-comment\\">(10 + 3)</span>  <span class=\\"hljs-comment\\">// &gt;&gt; 52</span>\\n"},{"page":0,"findAt":9,"contents":"1.3.1 Priorities<a class=\\"headline-link\\" href=\\"#1-3-1-priorities\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":0,"findAt":3,"contents":"implemented priorities"},{"page":0,"findAt":3,"contents":"<a href=\\"#1.3.0-Brackets\\">brackets</a> <code>(</code>, <code>)</code>"},{"page":0,"findAt":3,"contents":"<a href=\\"#1.2-Logical-Operators\\">logical operators</a> &gt; and <code>&amp;&amp;</code>"},{"page":0,"findAt":3,"contents":"<a href=\\"#1.2-Logical-Operators\\">logical operators</a> &gt; or <code>||</code>"},{"page":0,"findAt":3,"contents":"comparison"},{"page":0,"findAt":3,"contents":"&gt;"},{"page":0,"findAt":3,"contents":"&lt;"},{"page":0,"findAt":3,"contents":"&gt;="},{"page":0,"findAt":3,"contents":"&lt;="},{"page":0,"findAt":3,"contents":"=="},{"page":0,"findAt":3,"contents":"<a href=\\"#1.0-Mathematical-operators\\">mathematical</a> &gt; power <code>**</code>"},{"page":0,"findAt":3,"contents":"<a href=\\"#1.0-Mathematical-operators\\">mathematical</a> &gt; mul, div, mod <code>*</code> <code>/</code> <code>%</code>"},{"page":0,"findAt":3,"contents":"<a href=\\"#1.0-Mathematical-operators\\">mathematical</a> &gt; add, sub <code>+</code> <code>-</code>"},{"page":2,"findAt":10,"contents":"Home"},{"page":1,"findAt":9,"contents":"Learn"},{"page":1,"findAt":9,"contents":"Docs"},{"page":1,"findAt":9,"contents":"\\n          Playground\\n        "},{"page":1,"findAt":3,"contents":"A modern object-orientated programming language "},{"page":1,"findAt":3,"contents":"Try Shake"},{"page":1,"findAt":11,"contents":"println(\\"hello world\\");"},{"page":3,"findAt":12,"contents":"Headline 1<a class=\\"headline-link\\" href=\\"#headline-1\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":2,"findAt":13,"contents":"Headline 2<a class=\\"headline-link\\" href=\\"#headline-2\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":2,"findAt":14,"contents":"Headline 3<a class=\\"headline-link\\" href=\\"#headline-3\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":2,"findAt":15,"contents":"Headline 4<a class=\\"headline-link\\" href=\\"#headline-4\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":2,"findAt":16,"contents":"Headline 5<a class=\\"headline-link\\" href=\\"#headline-5\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":2,"findAt":17,"contents":"Headline 6<a class=\\"headline-link\\" href=\\"#headline-6\\"><i class=\\"mdi mdi-link-variant\\"></i></a>"},{"page":2,"findAt":3,"contents":"<span class=\\"hljs-tag\\">var</span> <span class=\\"hljs-tag\\">i</span> = <span class=\\"hljs-number\\">0</span>\\n"}],"fuseIndex":{"keys":[{"path":["contents"],"id":"contents","weight":1,"src":"contents"}],"records":[{"i":0,"$":{"0":{"v":"Shake Programming Language Features<a class=\\"headline-link\\" href=\\"#shake-programming-language-features\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.354}}},{"i":1,"$":{"0":{"v":"1 Operators<a class=\\"headline-link\\" href=\\"#1-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":2,"$":{"0":{"v":"1.0 Mathematical Operators<a class=\\"headline-link\\" href=\\"#1-0-mathematical-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.378}}},{"i":3,"$":{"0":{"v":"Shake has 6 different types of simple mathematical operators","n":0.333}}},{"i":4,"$":{"0":{"v":"<span class=\\"hljs-number\\">10</span> + <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// plus</span>\\n<span class=\\"hljs-number\\">10</span> – <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// minus</span>\\n<span class=\\"hljs-number\\">10</span> * <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// multiply</span>\\n<span class=\\"hljs-number\\">10</span> / <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// divide</span>\\n<span class=\\"hljs-number\\">10</span> <span class=\\"hljs-preprocessor\\">%</span> <span class=\\"hljs-number\\">3</span>   <span class=\\"hljs-comment\\">// modulo</span>\\n<span class=\\"hljs-number\\">10</span> ** <span class=\\"hljs-number\\">3</span>  <span class=\\"hljs-comment\\">// power (&gt;&gt; 10 * 10 * 10)</span>\\n","n":0.141}}},{"i":5,"$":{"0":{"v":"1.1 Comparison Operators<a class=\\"headline-link\\" href=\\"#1-1-comparison-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.378}}},{"i":6,"$":{"0":{"v":"These are Shake\'s comparison-operators","n":0.5}}},{"i":7,"$":{"0":{"v":"<span class=\\"hljs-number\\">9</span> == <span class=\\"hljs-number\\">8</span>  <span class=\\"hljs-comment\\">// equals</span>\\n<span class=\\"hljs-number\\">9</span> &gt;= <span class=\\"hljs-number\\">8</span>  <span class=\\"hljs-comment\\">// bigger Equals</span>\\n<span class=\\"hljs-number\\">9</span> &lt;= <span class=\\"hljs-number\\">8</span>  <span class=\\"hljs-comment\\">// lower Equals</span>\\n<span class=\\"hljs-number\\">9</span> &gt; <span class=\\"hljs-number\\">8</span>   <span class=\\"hljs-comment\\">// bigger</span>\\n<span class=\\"hljs-number\\">9</span> &lt; <span class=\\"hljs-number\\">8</span>   <span class=\\"hljs-comment\\">// lower</span>\\n","n":0.162}}},{"i":8,"$":{"0":{"v":"1.2 Logical Operators<a class=\\"headline-link\\" href=\\"#1-2-logical-operators\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.378}}},{"i":9,"$":{"0":{"v":"<span class=\\"hljs-literal\\">true</span> || <span class=\\"hljs-literal\\">false</span>  <span class=\\"hljs-regexp\\">//</span> <span class=\\"hljs-keyword\\">or</span> (at least one <span class=\\"hljs-keyword\\">of</span> them has to be correct) \\n<span class=\\"hljs-literal\\">true</span> &amp;&amp; <span class=\\"hljs-literal\\">false</span>  <span class=\\"hljs-regexp\\">//</span> <span class=\\"hljs-keyword\\">and</span> (both <span class=\\"hljs-keyword\\">of</span> them have to be correct)\\n","n":0.167}}},{"i":10,"$":{"0":{"v":"1.3 Brackets &amp; Priorities<a class=\\"headline-link\\" href=\\"#1-3-brackets-priorities\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.354}}},{"i":11,"$":{"0":{"v":"1.3.0 Brackets<a class=\\"headline-link\\" href=\\"#1-3-0-brackets\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":12,"$":{"0":{"v":"If you are working with bigger terms, there are priorities, e.g.\\nmultiplication and divisions are preferred before plus and minus.","n":0.229}}},{"i":13,"$":{"0":{"v":"If you want to prefer plus over multiply you can use brackets around\\nthe addition to give it a higher priority","n":0.224}}},{"i":14,"$":{"0":{"v":"eg.","n":1}}},{"i":15,"$":{"0":{"v":"<span class=\\"hljs-number\\">4</span> * <span class=\\"hljs-number\\">10</span> + <span class=\\"hljs-number\\">3</span>    <span class=\\"hljs-comment\\">// &gt;&gt; 43</span>\\n<span class=\\"hljs-number\\">4</span> * <span class=\\"hljs-comment\\">(10 + 3)</span>  <span class=\\"hljs-comment\\">// &gt;&gt; 52</span>\\n","n":0.213}}},{"i":16,"$":{"0":{"v":"1.3.1 Priorities<a class=\\"headline-link\\" href=\\"#1-3-1-priorities\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":17,"$":{"0":{"v":"implemented priorities","n":0.707}}},{"i":18,"$":{"0":{"v":"<a href=\\"#1.3.0-Brackets\\">brackets</a> <code>(</code>, <code>)</code>","n":0.5}}},{"i":19,"$":{"0":{"v":"<a href=\\"#1.2-Logical-Operators\\">logical operators</a> &gt; and <code>&amp;&amp;</code>","n":0.408}}},{"i":20,"$":{"0":{"v":"<a href=\\"#1.2-Logical-Operators\\">logical operators</a> &gt; or <code>||</code>","n":0.408}}},{"i":21,"$":{"0":{"v":"comparison","n":1}}},{"i":22,"$":{"0":{"v":"&gt;","n":1}}},{"i":23,"$":{"0":{"v":"&lt;","n":1}}},{"i":24,"$":{"0":{"v":"&gt;=","n":1}}},{"i":25,"$":{"0":{"v":"&lt;=","n":1}}},{"i":26,"$":{"0":{"v":"==","n":1}}},{"i":27,"$":{"0":{"v":"<a href=\\"#1.0-Mathematical-operators\\">mathematical</a> &gt; power <code>**</code>","n":0.447}}},{"i":28,"$":{"0":{"v":"<a href=\\"#1.0-Mathematical-operators\\">mathematical</a> &gt; mul, div, mod <code>*</code> <code>/</code> <code>%</code>","n":0.333}}},{"i":29,"$":{"0":{"v":"<a href=\\"#1.0-Mathematical-operators\\">mathematical</a> &gt; add, sub <code>+</code> <code>-</code>","n":0.378}}},{"i":30,"$":{"0":{"v":"Home","n":1}}},{"i":31,"$":{"0":{"v":"Learn","n":1}}},{"i":32,"$":{"0":{"v":"Docs","n":1}}},{"i":33,"$":{"0":{"v":"\\n          Playground\\n        ","n":0.707}}},{"i":34,"$":{"0":{"v":"A modern object-orientated programming language ","n":0.447}}},{"i":35,"$":{"0":{"v":"Try Shake","n":0.707}}},{"i":36,"$":{"0":{"v":"println(\\"hello world\\");","n":0.707}}},{"i":37,"$":{"0":{"v":"Headline 1<a class=\\"headline-link\\" href=\\"#headline-1\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":38,"$":{"0":{"v":"Headline 2<a class=\\"headline-link\\" href=\\"#headline-2\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":39,"$":{"0":{"v":"Headline 3<a class=\\"headline-link\\" href=\\"#headline-3\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":40,"$":{"0":{"v":"Headline 4<a class=\\"headline-link\\" href=\\"#headline-4\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":41,"$":{"0":{"v":"Headline 5<a class=\\"headline-link\\" href=\\"#headline-5\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":42,"$":{"0":{"v":"Headline 6<a class=\\"headline-link\\" href=\\"#headline-6\\"><i class=\\"mdi mdi-link-variant\\"></i></a>","n":0.408}}},{"i":43,"$":{"0":{"v":"<span class=\\"hljs-tag\\">var</span> <span class=\\"hljs-tag\\">i</span> = <span class=\\"hljs-number\\">0</span>\\n","n":0.378}}}]}}')}}]);